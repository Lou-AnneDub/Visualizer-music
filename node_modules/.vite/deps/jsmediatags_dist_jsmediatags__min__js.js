import {
  __commonJS,
  __require
} from "./chunk-7D4SUZUM.js";

// node_modules/jsmediatags/dist/jsmediatags.min.js
var require_jsmediatags_min = __commonJS({
  "node_modules/jsmediatags/dist/jsmediatags.min.js"(exports, module) {
    var $jscomp = $jscomp || {};
    $jscomp.scope = {};
    $jscomp.ASSUME_ES5 = false;
    $jscomp.ASSUME_NO_NATIVE_MAP = false;
    $jscomp.ASSUME_NO_NATIVE_SET = false;
    $jscomp.defineProperty = $jscomp.ASSUME_ES5 || "function" == typeof Object.defineProperties ? Object.defineProperty : function(d, r, q) {
      d != Array.prototype && d != Object.prototype && (d[r] = q.value);
    };
    $jscomp.getGlobal = function(d) {
      return "undefined" != typeof window && window === d ? d : "undefined" != typeof global && null != global ? global : d;
    };
    $jscomp.global = $jscomp.getGlobal(exports);
    $jscomp.polyfill = function(d, r, q, n) {
      if (r) {
        q = $jscomp.global;
        d = d.split(".");
        for (n = 0; n < d.length - 1; n++) {
          var u = d[n];
          u in q || (q[u] = {});
          q = q[u];
        }
        d = d[d.length - 1];
        n = q[d];
        r = r(n);
        r != n && null != r && $jscomp.defineProperty(q, d, { configurable: true, writable: true, value: r });
      }
    };
    $jscomp.polyfill("Object.setPrototypeOf", function(d) {
      return d ? d : "object" != typeof "".__proto__ ? null : function(d2, q) {
        d2.__proto__ = q;
        if (d2.__proto__ !== q) throw new TypeError(d2 + " is not extensible");
        return d2;
      };
    }, "es6", "es5");
    $jscomp.objectCreate = $jscomp.ASSUME_ES5 || "function" == typeof Object.create ? Object.create : function(d) {
      var r = function() {
      };
      r.prototype = d;
      return new r();
    };
    $jscomp.construct = "undefined" != typeof Reflect && Reflect.construct || function(d, r, q) {
      void 0 === q && (q = d);
      q = $jscomp.objectCreate(q.prototype || Object.prototype);
      return Function.prototype.apply.call(d, q, r) || q;
    };
    $jscomp.polyfill("Reflect.construct", function(d) {
      return d || $jscomp.construct;
    }, "es6", "es3");
    (function(d) {
      "object" === typeof exports && "undefined" !== typeof module ? module.exports = d() : "function" === typeof define && define.amd ? define([], d) : ("undefined" !== typeof window ? window : "undefined" !== typeof global ? global : "undefined" !== typeof self ? self : this).jsmediatags = d();
    })(function() {
      return (/* @__PURE__ */ function() {
        function d(r, q, n) {
          function u(e, b) {
            if (!q[e]) {
              if (!r[e]) {
                var h = "function" == typeof __require && __require;
                if (!b && h) return h(e, true);
                if (v) return v(e, true);
                b = Error("Cannot find module '" + e + "'");
                throw b.code = "MODULE_NOT_FOUND", b;
              }
              b = q[e] = { exports: {} };
              r[e][0].call(b.exports, function(b2) {
                return u(r[e][1][b2] || b2);
              }, b, b.exports, d, r, q, n);
            }
            return q[e].exports;
          }
          for (var v = "function" == typeof __require && __require, p = 0; p < n.length; p++) u(n[p]);
          return u;
        }
        return d;
      }())({ 1: [function(d, r, q) {
      }, {}], 2: [function(d, r, q) {
        r.exports = XMLHttpRequest;
      }, {}], 3: [function(d, r, q) {
        function n(f) {
          "@babel/helpers - typeof";
          n = "function" === typeof Symbol && "symbol" === typeof Symbol.iterator ? function(a) {
            return typeof a;
          } : function(a) {
            return a && "function" === typeof Symbol && a.constructor === Symbol && a !== Symbol.prototype ? "symbol" : typeof a;
          };
          return n(f);
        }
        function u(f, a) {
          for (var c = 0; c < a.length; c++) {
            var k = a[c];
            k.enumerable = k.enumerable || false;
            k.configurable = true;
            "value" in k && (k.writable = true);
            Object.defineProperty(f, k.key, k);
          }
        }
        function v(f, a, c) {
          a && u(f.prototype, a);
          c && u(f, c);
          return f;
        }
        function p(f, a) {
          if ("function" !== typeof a && null !== a) throw new TypeError("Super expression must either be null or a function");
          f.prototype = Object.create(a && a.prototype, { constructor: { value: f, writable: true, configurable: true } });
          a && e(f, a);
        }
        function e(f, a) {
          e = Object.setPrototypeOf || function(a2, k) {
            a2.__proto__ = k;
            return a2;
          };
          return e(f, a);
        }
        function b(f) {
          var a = l();
          return function() {
            var c = t(f);
            if (a) {
              var k = t(this).constructor;
              c = Reflect.construct(c, arguments, k);
            } else c = c.apply(this, arguments);
            c = !c || "object" !== n(c) && "function" !== typeof c ? h(this) : c;
            return c;
          };
        }
        function h(f) {
          if (void 0 === f) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          return f;
        }
        function l() {
          if ("undefined" === typeof Reflect || !Reflect.construct || Reflect.construct.sham) return false;
          if ("function" === typeof Proxy) return true;
          try {
            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            })), true;
          } catch (f) {
            return false;
          }
        }
        function t(f) {
          t = Object.setPrototypeOf ? Object.getPrototypeOf : function(a) {
            return a.__proto__ || Object.getPrototypeOf(a);
          };
          return t(f);
        }
        function m(f, a, c) {
          a in f ? Object.defineProperty(f, a, { value: c, enumerable: true, configurable: true, writable: true }) : f[a] = c;
          return f;
        }
        d = function(f) {
          function a(k) {
            if (!(this instanceof a)) throw new TypeError("Cannot call a class as a function");
            var g = c.call(this);
            m(h(g), "_array", void 0);
            m(h(g), "_size", void 0);
            g._array = k;
            g._size = k.length;
            g._isInitialized = true;
            return g;
          }
          p(a, f);
          var c = b(a);
          v(a, [{ key: "init", value: function(a2) {
            setTimeout(a2.onSuccess, 0);
          } }, { key: "loadRange", value: function(a2, g) {
            setTimeout(g.onSuccess, 0);
          } }, { key: "getByteAt", value: function(a2) {
            if (a2 >= this._array.length) throw Error("Offset " + a2 + " hasn't been loaded yet.");
            return this._array[a2];
          } }], [{ key: "canReadFile", value: function(a2) {
            return Array.isArray(a2) || "function" === typeof Buffer && Buffer.isBuffer(a2);
          } }]);
          return a;
        }(d("./MediaFileReader"));
        r.exports = d;
      }, { "./MediaFileReader": 11 }], 4: [function(d, r, q) {
        function n(a) {
          "@babel/helpers - typeof";
          n = "function" === typeof Symbol && "symbol" === typeof Symbol.iterator ? function(a2) {
            return typeof a2;
          } : function(a2) {
            return a2 && "function" === typeof Symbol && a2.constructor === Symbol && a2 !== Symbol.prototype ? "symbol" : typeof a2;
          };
          return n(a);
        }
        function u(a, c) {
          for (var k = 0; k < c.length; k++) {
            var g = c[k];
            g.enumerable = g.enumerable || false;
            g.configurable = true;
            "value" in g && (g.writable = true);
            Object.defineProperty(
              a,
              g.key,
              g
            );
          }
        }
        function v(a, c, k) {
          c && u(a.prototype, c);
          k && u(a, k);
          return a;
        }
        function p(a, c) {
          if ("function" !== typeof c && null !== c) throw new TypeError("Super expression must either be null or a function");
          a.prototype = Object.create(c && c.prototype, { constructor: { value: a, writable: true, configurable: true } });
          c && e(a, c);
        }
        function e(a, c) {
          e = Object.setPrototypeOf || function(a2, g) {
            a2.__proto__ = g;
            return a2;
          };
          return e(a, c);
        }
        function b(a) {
          var c = l();
          return function() {
            var k = t(a);
            if (c) {
              var g = t(this).constructor;
              k = Reflect.construct(
                k,
                arguments,
                g
              );
            } else k = k.apply(this, arguments);
            k = !k || "object" !== n(k) && "function" !== typeof k ? h(this) : k;
            return k;
          };
        }
        function h(a) {
          if (void 0 === a) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          return a;
        }
        function l() {
          if ("undefined" === typeof Reflect || !Reflect.construct || Reflect.construct.sham) return false;
          if ("function" === typeof Proxy) return true;
          try {
            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            })), true;
          } catch (a) {
            return false;
          }
        }
        function t(a) {
          t = Object.setPrototypeOf ? Object.getPrototypeOf : function(a2) {
            return a2.__proto__ || Object.getPrototypeOf(a2);
          };
          return t(a);
        }
        function m(a, c, k) {
          c in a ? Object.defineProperty(a, c, { value: k, enumerable: true, configurable: true, writable: true }) : a[c] = k;
          return a;
        }
        var f = d("./ChunkedFileData");
        d = function(a) {
          function c(a2) {
            if (!(this instanceof c)) throw new TypeError("Cannot call a class as a function");
            var g = k.call(this);
            m(h(g), "_blob", void 0);
            m(h(g), "_fileData", void 0);
            g._blob = a2;
            g._fileData = new f();
            return g;
          }
          p(c, a);
          var k = b(c);
          v(c, [{ key: "_init", value: function(a2) {
            this._size = this._blob.size;
            setTimeout(a2.onSuccess, 1);
          } }, { key: "loadRange", value: function(a2, c2) {
            var g = this, k2 = (this._blob.slice || this._blob.mozSlice || this._blob.webkitSlice).call(this._blob, a2[0], a2[1] + 1), f2 = new FileReader();
            f2.onloadend = function(k3) {
              k3 = new Uint8Array(f2.result);
              g._fileData.addData(a2[0], k3);
              c2.onSuccess();
            };
            f2.onerror = f2.onabort = function(a3) {
              if (c2.onError) c2.onError({ type: "blob", info: f2.error });
            };
            f2.readAsArrayBuffer(k2);
          } }, { key: "getByteAt", value: function(a2) {
            return this._fileData.getByteAt(a2);
          } }], [{ key: "canReadFile", value: function(a2) {
            return "undefined" !== typeof Blob && a2 instanceof Blob || "undefined" !== typeof File && a2 instanceof File;
          } }]);
          return c;
        }(d("./MediaFileReader"));
        r.exports = d;
      }, { "./ChunkedFileData": 5, "./MediaFileReader": 11 }], 5: [function(d, r, q) {
        function n(d2, p) {
          for (var e = 0; e < p.length; e++) {
            var b = p[e];
            b.enumerable = b.enumerable || false;
            b.configurable = true;
            "value" in b && (b.writable = true);
            Object.defineProperty(d2, b.key, b);
          }
        }
        function u(d2, p, e) {
          p && n(d2.prototype, p);
          e && n(d2, e);
          return d2;
        }
        d = function() {
          function d2() {
            if (!(this instanceof d2)) throw new TypeError("Cannot call a class as a function");
            "_fileData" in this ? Object.defineProperty(this, "_fileData", { value: void 0, enumerable: true, configurable: true, writable: true }) : this._fileData = void 0;
            this._fileData = [];
          }
          u(d2, [{ key: "addData", value: function(d3, e) {
            var b = d3 + e.length - 1, h = this._getChunkRange(d3, b);
            if (-1 === h.startIx) this._fileData.splice(h.insertIx || 0, 0, { offset: d3, data: e });
            else {
              var l = this._fileData[h.startIx], p = this._fileData[h.endIx];
              b = b < p.offset + p.data.length - 1;
              var m = { offset: Math.min(d3, l.offset), data: e };
              d3 > l.offset && (d3 = this._sliceData(l.data, 0, d3 - l.offset), m.data = this._concatData(d3, e));
              b && (d3 = this._sliceData(m.data, 0, p.offset - m.offset), m.data = this._concatData(d3, p.data));
              this._fileData.splice(h.startIx, h.endIx - h.startIx + 1, m);
            }
          } }, { key: "_concatData", value: function(d3, e) {
            if ("undefined" !== typeof ArrayBuffer && ArrayBuffer.isView && ArrayBuffer.isView(d3)) {
              var b = new d3.constructor(d3.length + e.length);
              b.set(d3, 0);
              b.set(e, d3.length);
              return b;
            }
            return d3.concat(e);
          } }, { key: "_sliceData", value: function(d3, e, b) {
            return d3.slice ? d3.slice(e, b) : d3.subarray(e, b);
          } }, {
            key: "_getChunkRange",
            value: function(d3, e) {
              for (var b, h, l = -1, t = -1, m = 0, f = 0; f < this._fileData.length; f++, m = f) {
                h = this._fileData[f].offset;
                b = h + this._fileData[f].data.length;
                if (e < h - 1) break;
                if (d3 <= b + 1 && e >= h - 1) {
                  l = f;
                  break;
                }
              }
              if (-1 === l) return { startIx: -1, endIx: -1, insertIx: m };
              for (f = l; f < this._fileData.length && !(h = this._fileData[f].offset, b = h + this._fileData[f].data.length, e >= h - 1 && (t = f), e <= b + 1); f++) ;
              -1 === t && (t = l);
              return { startIx: l, endIx: t };
            }
          }, { key: "hasDataRange", value: function(d3, e) {
            for (var b = 0; b < this._fileData.length; b++) {
              var h = this._fileData[b];
              if (e < h.offset) break;
              if (d3 >= h.offset && e < h.offset + h.data.length) return true;
            }
            return false;
          } }, { key: "getByteAt", value: function(d3) {
            for (var e, b = 0; b < this._fileData.length; b++) {
              var h = this._fileData[b].offset, l = h + this._fileData[b].data.length - 1;
              if (d3 >= h && d3 <= l) {
                e = this._fileData[b];
                break;
              }
            }
            if (e) return e.data[d3 - e.offset];
            throw Error("Offset " + d3 + " hasn't been loaded yet.");
          } }], [{ key: "NOT_FOUND", get: function() {
            return -1;
          } }]);
          return d2;
        }();
        r.exports = d;
      }, {}], 6: [function(d, r, q) {
        function n(a2) {
          "@babel/helpers - typeof";
          n = "function" === typeof Symbol && "symbol" === typeof Symbol.iterator ? function(a3) {
            return typeof a3;
          } : function(a3) {
            return a3 && "function" === typeof Symbol && a3.constructor === Symbol && a3 !== Symbol.prototype ? "symbol" : typeof a3;
          };
          return n(a2);
        }
        function u(a2, g) {
          for (var c2 = 0; c2 < g.length; c2++) {
            var k = g[c2];
            k.enumerable = k.enumerable || false;
            k.configurable = true;
            "value" in k && (k.writable = true);
            Object.defineProperty(a2, k.key, k);
          }
        }
        function v(a2, g, c2) {
          g && u(a2.prototype, g);
          c2 && u(a2, c2);
          return a2;
        }
        function p(a2, c2) {
          if ("function" !== typeof c2 && null !== c2) throw new TypeError("Super expression must either be null or a function");
          a2.prototype = Object.create(c2 && c2.prototype, { constructor: { value: a2, writable: true, configurable: true } });
          c2 && e(a2, c2);
        }
        function e(a2, c2) {
          e = Object.setPrototypeOf || function(a3, c3) {
            a3.__proto__ = c3;
            return a3;
          };
          return e(a2, c2);
        }
        function b(a2) {
          var c2 = l();
          return function() {
            var g = t(a2);
            if (c2) {
              var k = t(this).constructor;
              g = Reflect.construct(g, arguments, k);
            } else g = g.apply(this, arguments);
            g = !g || "object" !== n(g) && "function" !== typeof g ? h(this) : g;
            return g;
          };
        }
        function h(a2) {
          if (void 0 === a2) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          return a2;
        }
        function l() {
          if ("undefined" === typeof Reflect || !Reflect.construct || Reflect.construct.sham) return false;
          if ("function" === typeof Proxy) return true;
          try {
            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            })), true;
          } catch (k) {
            return false;
          }
        }
        function t(a2) {
          t = Object.setPrototypeOf ? Object.getPrototypeOf : function(a3) {
            return a3.__proto__ || Object.getPrototypeOf(a3);
          };
          return t(a2);
        }
        function m(a2, c2, f2) {
          c2 in a2 ? Object.defineProperty(a2, c2, { value: f2, enumerable: true, configurable: true, writable: true }) : a2[c2] = f2;
          return a2;
        }
        var f = [4, 132], a = [6, 134], c = "Other;32x32 pixels 'file icon' (PNG only);Other file icon;Cover (front);Cover (back);Leaflet page;Media (e.g. label side of CD);Lead artist/lead performer/soloist;Artist/performer;Conductor;Band/Orchestra;Composer;Lyricist/text writer;Recording Location;During recording;During performance;Movie/video screen capture;A bright coloured fish;Illustration;Band/artist logotype;Publisher/Studio logotype".split(";");
        d = function(k) {
          function g() {
            if (!(this instanceof g)) throw new TypeError("Cannot call a class as a function");
            var a2 = arguments.length;
            for (var c2 = Array(a2), f2 = 0; f2 < a2; f2++) c2[f2] = arguments[f2];
            a2 = w.call.apply(w, [this].concat(c2));
            m(h(a2), "_commentOffset", void 0);
            m(h(a2), "_pictureOffset", void 0);
            return a2;
          }
          p(g, k);
          var w = b(g);
          v(g, [{ key: "_loadData", value: function(a2, c2) {
            var g2 = this;
            a2.loadRange([4, 7], { onSuccess: function() {
              g2._loadBlock(a2, 4, c2);
            } });
          } }, { key: "_loadBlock", value: function(c2, g2, k2) {
            var b2 = this, m2 = c2.getByteAt(g2), w2 = c2.getInteger24At(g2 + 1, true);
            if (-1 !== f.indexOf(m2)) {
              var e2 = g2 + 4;
              c2.loadRange([e2, e2 + w2], { onSuccess: function() {
                b2._commentOffset = e2;
                b2._nextBlock(c2, g2, m2, w2, k2);
              } });
            } else -1 !== a.indexOf(m2) ? (e2 = g2 + 4, c2.loadRange([e2, e2 + w2], { onSuccess: function() {
              b2._pictureOffset = e2;
              b2._nextBlock(c2, g2, m2, w2, k2);
            } })) : b2._nextBlock(c2, g2, m2, w2, k2);
          } }, { key: "_nextBlock", value: function(a2, c2, g2, f2, k2) {
            var b2 = this;
            if (127 < g2) if (b2._commentOffset) k2.onSuccess();
            else k2.onError({ type: "loadData", info: "Comment block could not be found." });
            else a2.loadRange([c2 + 4 + f2, c2 + 4 + 4 + f2], { onSuccess: function() {
              b2._loadBlock(a2, c2 + 4 + f2, k2);
            } });
          } }, { key: "_parseData", value: function(a2, g2) {
            var f2 = a2.getLongAt(
              this._commentOffset,
              false
            ) + (this._commentOffset + 4);
            g2 = a2.getLongAt(f2, false);
            f2 += 4;
            for (var k2, b2, m2, w2, e2, d2, h2 = 0; h2 < g2; h2++) {
              var x = a2.getLongAt(f2, false), l2 = a2.getStringWithCharsetAt(f2 + 4, x, "utf-8").toString(), y = l2.indexOf("=");
              l2 = [l2.slice(0, y), l2.slice(y + 1)];
              switch (l2[0].toUpperCase()) {
                case "TITLE":
                  k2 = l2[1];
                  break;
                case "ARTIST":
                  b2 = l2[1];
                  break;
                case "ALBUM":
                  m2 = l2[1];
                  break;
                case "TRACKNUMBER":
                  w2 = l2[1];
                  break;
                case "GENRE":
                  e2 = l2[1];
              }
              f2 += 4 + x;
            }
            this._pictureOffset && (d2 = a2.getLongAt(this._pictureOffset, true), g2 = this._pictureOffset + 4, f2 = a2.getLongAt(g2, true), h2 = g2 + 4, g2 = a2.getStringAt(
              h2,
              f2
            ), f2 = h2 + f2, h2 = a2.getLongAt(f2, true), x = f2 + 4, f2 = a2.getStringWithCharsetAt(x, h2, "utf-8").toString(), h2 = x + h2 + 16, x = a2.getLongAt(h2, true), a2 = a2.getBytesAt(h2 + 4, x, true), d2 = { format: g2, type: c[d2], description: f2, data: a2 });
            return { type: "FLAC", version: "1", tags: { title: k2, artist: b2, album: m2, track: w2, genre: e2, picture: d2 } };
          } }], [{ key: "getTagIdentifierByteRange", value: function() {
            return { offset: 0, length: 4 };
          } }, { key: "canReadTagFormat", value: function(a2) {
            return "fLaC" === String.fromCharCode.apply(String, a2.slice(0, 4));
          } }]);
          return g;
        }(d("./MediaTagReader"));
        r.exports = d;
      }, { "./MediaTagReader": 12 }], 7: [function(d, r, q) {
        function n(b2) {
          "@babel/helpers - typeof";
          n = "function" === typeof Symbol && "symbol" === typeof Symbol.iterator ? function(f) {
            return typeof f;
          } : function(f) {
            return f && "function" === typeof Symbol && f.constructor === Symbol && f !== Symbol.prototype ? "symbol" : typeof f;
          };
          return n(b2);
        }
        function u(b2, f) {
          for (var a = 0; a < f.length; a++) {
            var c = f[a];
            c.enumerable = c.enumerable || false;
            c.configurable = true;
            "value" in c && (c.writable = true);
            Object.defineProperty(b2, c.key, c);
          }
        }
        function v(b2, f, a) {
          f && u(
            b2.prototype,
            f
          );
          a && u(b2, a);
          return b2;
        }
        function p(b2, f) {
          if ("function" !== typeof f && null !== f) throw new TypeError("Super expression must either be null or a function");
          b2.prototype = Object.create(f && f.prototype, { constructor: { value: b2, writable: true, configurable: true } });
          f && e(b2, f);
        }
        function e(b2, f) {
          e = Object.setPrototypeOf || function(a, c) {
            a.__proto__ = c;
            return a;
          };
          return e(b2, f);
        }
        function b(b2) {
          var f = h();
          return function() {
            var a = l(b2);
            if (f) {
              var c = l(this).constructor;
              a = Reflect.construct(a, arguments, c);
            } else a = a.apply(this, arguments);
            if (!a || "object" !== n(a) && "function" !== typeof a) {
              if (void 0 === this) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              a = this;
            }
            return a;
          };
        }
        function h() {
          if ("undefined" === typeof Reflect || !Reflect.construct || Reflect.construct.sham) return false;
          if ("function" === typeof Proxy) return true;
          try {
            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            })), true;
          } catch (m) {
            return false;
          }
        }
        function l(b2) {
          l = Object.setPrototypeOf ? Object.getPrototypeOf : function(f) {
            return f.__proto__ || Object.getPrototypeOf(f);
          };
          return l(b2);
        }
        q = d("./MediaTagReader");
        d("./MediaFileReader");
        d = function(m) {
          function f() {
            if (!(this instanceof f)) throw new TypeError("Cannot call a class as a function");
            return a.apply(this, arguments);
          }
          p(f, m);
          var a = b(f);
          v(f, [{ key: "_loadData", value: function(a2, f2) {
            var c = a2.getSize();
            a2.loadRange([c - 128, c - 1], f2);
          } }, { key: "_parseData", value: function(a2, f2) {
            var c = a2.getSize() - 128, b2 = a2.getStringWithCharsetAt(c + 3, 30).toString(), k = a2.getStringWithCharsetAt(c + 33, 30).toString(), m2 = a2.getStringWithCharsetAt(c + 63, 30).toString(), e2 = a2.getStringWithCharsetAt(c + 93, 4).toString();
            var d2 = a2.getByteAt(c + 97 + 28);
            f2 = a2.getByteAt(c + 97 + 29);
            if (0 == d2 && 0 != f2) {
              var h2 = "1.1";
              d2 = a2.getStringWithCharsetAt(c + 97, 28).toString();
            } else h2 = "1.0", d2 = a2.getStringWithCharsetAt(c + 97, 30).toString(), f2 = 0;
            a2 = a2.getByteAt(c + 97 + 30);
            a2 = { type: "ID3", version: h2, tags: { title: b2, artist: k, album: m2, year: e2, comment: d2, genre: 255 > a2 ? t[a2] : "" } };
            f2 && (a2.tags.track = f2);
            return a2;
          } }], [{ key: "getTagIdentifierByteRange", value: function() {
            return { offset: -128, length: 128 };
          } }, { key: "canReadTagFormat", value: function(a2) {
            return "TAG" === String.fromCharCode.apply(String, a2.slice(0, 3));
          } }]);
          return f;
        }(q);
        var t = "Blues;Classic Rock;Country;Dance;Disco;Funk;Grunge;Hip-Hop;Jazz;Metal;New Age;Oldies;Other;Pop;R&B;Rap;Reggae;Rock;Techno;Industrial;Alternative;Ska;Death Metal;Pranks;Soundtrack;Euro-Techno;Ambient;Trip-Hop;Vocal;Jazz+Funk;Fusion;Trance;Classical;Instrumental;Acid;House;Game;Sound Clip;Gospel;Noise;AlternRock;Bass;Soul;Punk;Space;Meditative;Instrumental Pop;Instrumental Rock;Ethnic;Gothic;Darkwave;Techno-Industrial;Electronic;Pop-Folk;Eurodance;Dream;Southern Rock;Comedy;Cult;Gangsta;Top 40;Christian Rap;Pop/Funk;Jungle;Native American;Cabaret;New Wave;Psychadelic;Rave;Showtunes;Trailer;Lo-Fi;Tribal;Acid Punk;Acid Jazz;Polka;Retro;Musical;Rock & Roll;Hard Rock;Folk;Folk-Rock;National Folk;Swing;Fast Fusion;Bebob;Latin;Revival;Celtic;Bluegrass;Avantgarde;Gothic Rock;Progressive Rock;Psychedelic Rock;Symphonic Rock;Slow Rock;Big Band;Chorus;Easy Listening;Acoustic;Humour;Speech;Chanson;Opera;Chamber Music;Sonata;Symphony;Booty Bass;Primus;Porn Groove;Satire;Slow Jam;Club;Tango;Samba;Folklore;Ballad;Power Ballad;Rhythmic Soul;Freestyle;Duet;Punk Rock;Drum Solo;Acapella;Euro-House;Dance Hall".split(";");
        r.exports = d;
      }, { "./MediaFileReader": 11, "./MediaTagReader": 12 }], 8: [function(d, r, q) {
        function n(b2, f) {
          for (var a = 0; a < f.length; a++) {
            var c = f[a];
            c.enumerable = c.enumerable || false;
            c.configurable = true;
            "value" in c && (c.writable = true);
            Object.defineProperty(b2, c.key, c);
          }
        }
        function u(b2, f, a) {
          f && n(b2.prototype, f);
          a && n(b2, a);
          return b2;
        }
        function v(b2) {
          switch (b2) {
            case 0:
              b2 = "iso-8859-1";
              break;
            case 1:
              b2 = "utf-16";
              break;
            case 2:
              b2 = "utf-16be";
              break;
            case 3:
              b2 = "utf-8";
              break;
            default:
              b2 = "iso-8859-1";
          }
          return b2;
        }
        function p(b2, f, a, c) {
          var k = a.getStringWithCharsetAt(b2 + 1, f - 1, c);
          b2 = a.getStringWithCharsetAt(b2 + 1 + k.bytesReadCount, f - 1 - k.bytesReadCount, c);
          return { user_description: k.toString(), data: b2.toString() };
        }
        d("./MediaFileReader");
        var e = d("./StringUtils"), b = d("./ArrayFileReader"), h = {
          BUF: "Recommended buffer size",
          CNT: "Play counter",
          COM: "Comments",
          CRA: "Audio encryption",
          CRM: "Encrypted meta frame",
          ETC: "Event timing codes",
          EQU: "Equalization",
          GEO: "General encapsulated object",
          IPL: "Involved people list",
          LNK: "Linked information",
          MCI: "Music CD Identifier",
          MLL: "MPEG location lookup table",
          PIC: "Attached picture",
          POP: "Popularimeter",
          REV: "Reverb",
          RVA: "Relative volume adjustment",
          SLT: "Synchronized lyric/text",
          STC: "Synced tempo codes",
          TAL: "Album/Movie/Show title",
          TBP: "BPM (Beats Per Minute)",
          TCM: "Composer",
          TCO: "Content type",
          TCR: "Copyright message",
          TDA: "Date",
          TDY: "Playlist delay",
          TEN: "Encoded by",
          TFT: "File type",
          TIM: "Time",
          TKE: "Initial key",
          TLA: "Language(s)",
          TLE: "Length",
          TMT: "Media type",
          TOA: "Original artist(s)/performer(s)",
          TOF: "Original filename",
          TOL: "Original Lyricist(s)/text writer(s)",
          TOR: "Original release year",
          TOT: "Original album/Movie/Show title",
          TP1: "Lead artist(s)/Lead performer(s)/Soloist(s)/Performing group",
          TP2: "Band/Orchestra/Accompaniment",
          TP3: "Conductor/Performer refinement",
          TP4: "Interpreted, remixed, or otherwise modified by",
          TPA: "Part of a set",
          TPB: "Publisher",
          TRC: "ISRC (International Standard Recording Code)",
          TRD: "Recording dates",
          TRK: "Track number/Position in set",
          TSI: "Size",
          TSS: "Software/hardware and settings used for encoding",
          TT1: "Content group description",
          TT2: "Title/Songname/Content description",
          TT3: "Subtitle/Description refinement",
          TXT: "Lyricist/text writer",
          TXX: "User defined text information frame",
          TYE: "Year",
          UFI: "Unique file identifier",
          ULT: "Unsychronized lyric/text transcription",
          WAF: "Official audio file webpage",
          WAR: "Official artist/performer webpage",
          WAS: "Official audio source webpage",
          WCM: "Commercial information",
          WCP: "Copyright/Legal information",
          WPB: "Publishers official webpage",
          WXX: "User defined URL link frame",
          AENC: "Audio encryption",
          APIC: "Attached picture",
          ASPI: "Audio seek point index",
          CHAP: "Chapter",
          CTOC: "Table of contents",
          COMM: "Comments",
          COMR: "Commercial frame",
          ENCR: "Encryption method registration",
          EQU2: "Equalisation (2)",
          EQUA: "Equalization",
          ETCO: "Event timing codes",
          GEOB: "General encapsulated object",
          GRID: "Group identification registration",
          IPLS: "Involved people list",
          LINK: "Linked information",
          MCDI: "Music CD identifier",
          MLLT: "MPEG location lookup table",
          OWNE: "Ownership frame",
          PRIV: "Private frame",
          PCNT: "Play counter",
          POPM: "Popularimeter",
          POSS: "Position synchronisation frame",
          RBUF: "Recommended buffer size",
          RVA2: "Relative volume adjustment (2)",
          RVAD: "Relative volume adjustment",
          RVRB: "Reverb",
          SEEK: "Seek frame",
          SYLT: "Synchronized lyric/text",
          SYTC: "Synchronized tempo codes",
          TALB: "Album/Movie/Show title",
          TBPM: "BPM (beats per minute)",
          TCOM: "Composer",
          TCON: "Content type",
          TCOP: "Copyright message",
          TDAT: "Date",
          TDLY: "Playlist delay",
          TDRC: "Recording time",
          TDRL: "Release time",
          TDTG: "Tagging time",
          TENC: "Encoded by",
          TEXT: "Lyricist/Text writer",
          TFLT: "File type",
          TIME: "Time",
          TIPL: "Involved people list",
          TIT1: "Content group description",
          TIT2: "Title/songname/content description",
          TIT3: "Subtitle/Description refinement",
          TKEY: "Initial key",
          TLAN: "Language(s)",
          TLEN: "Length",
          TMCL: "Musician credits list",
          TMED: "Media type",
          TMOO: "Mood",
          TOAL: "Original album/movie/show title",
          TOFN: "Original filename",
          TOLY: "Original lyricist(s)/text writer(s)",
          TOPE: "Original artist(s)/performer(s)",
          TORY: "Original release year",
          TOWN: "File owner/licensee",
          TPE1: "Lead performer(s)/Soloist(s)",
          TPE2: "Band/orchestra/accompaniment",
          TPE3: "Conductor/performer refinement",
          TPE4: "Interpreted, remixed, or otherwise modified by",
          TPOS: "Part of a set",
          TPRO: "Produced notice",
          TPUB: "Publisher",
          TRCK: "Track number/Position in set",
          TRDA: "Recording dates",
          TRSN: "Internet radio station name",
          TRSO: "Internet radio station owner",
          TSOA: "Album sort order",
          TSOP: "Performer sort order",
          TSOT: "Title sort order",
          TSIZ: "Size",
          TSRC: "ISRC (international standard recording code)",
          TSSE: "Software/Hardware and settings used for encoding",
          TSST: "Set subtitle",
          TYER: "Year",
          TXXX: "User defined text information frame",
          UFID: "Unique file identifier",
          USER: "Terms of use",
          USLT: "Unsychronized lyric/text transcription",
          WCOM: "Commercial information",
          WCOP: "Copyright/Legal information",
          WOAF: "Official audio file webpage",
          WOAR: "Official artist/performer webpage",
          WOAS: "Official audio source webpage",
          WORS: "Official internet radio station homepage",
          WPAY: "Payment",
          WPUB: "Publishers official webpage",
          WXXX: "User defined URL link frame"
        };
        d = function() {
          function e2() {
            if (!(this instanceof e2)) throw new TypeError("Cannot call a class as a function");
          }
          u(e2, null, [{ key: "getFrameReaderFunction", value: function(b2) {
            return b2 in l ? l[b2] : "T" === b2[0] ? l["T*"] : "W" === b2[0] ? l["W*"] : null;
          } }, { key: "readFrames", value: function(b2, a, c, k, g) {
            for (var f = {}, d2 = this._getFrameHeaderSize(k); b2 < a - d2; ) {
              var h2 = this._readFrameHeader(c, b2, k), m = h2.id;
              if (!m) break;
              var l2 = h2.flags, t2 = h2.size, p2 = b2 + h2.headerSize, n2 = c;
              b2 += h2.headerSize + h2.size;
              if (!g || -1 !== g.indexOf(m)) {
                if ("MP3e" === m || "\0MP3" === m || "\0\0MP" === m || " MP3" === m) break;
                l2 && l2.format.unsynchronisation && !k.flags.unsynchronisation && (n2 = this.getUnsyncFileReader(
                  n2,
                  p2,
                  t2
                ), p2 = 0, t2 = n2.getSize());
                l2 && l2.format.data_length_indicator && (p2 += 4, t2 -= 4);
                l2 = (h2 = e2.getFrameReaderFunction(m)) ? h2.apply(this, [p2, t2, n2, l2, k]) : null;
                p2 = this._getFrameDescription(m);
                t2 = { id: m, size: t2, description: p2, data: l2 };
                m in f ? (f[m].id && (f[m] = [f[m]]), f[m].push(t2)) : f[m] = t2;
              }
            }
            return f;
          } }, { key: "_getFrameHeaderSize", value: function(b2) {
            b2 = b2.major;
            return 2 == b2 ? 6 : 3 == b2 || 4 == b2 ? 10 : 0;
          } }, { key: "_readFrameHeader", value: function(b2, a, c) {
            var f = c.major, g = null;
            c = this._getFrameHeaderSize(c);
            switch (f) {
              case 2:
                var e3 = b2.getStringAt(a, 3);
                var m = b2.getInteger24At(a + 3, true);
                break;
              case 3:
                e3 = b2.getStringAt(a, 4);
                m = b2.getLongAt(a + 4, true);
                break;
              case 4:
                e3 = b2.getStringAt(a, 4), m = b2.getSynchsafeInteger32At(a + 4);
            }
            if (e3 == String.fromCharCode(0, 0, 0) || e3 == String.fromCharCode(0, 0, 0, 0)) e3 = "";
            e3 && 2 < f && (g = this._readFrameFlags(b2, a + 8));
            return { id: e3 || "", size: m || 0, headerSize: c || 0, flags: g };
          } }, { key: "_readFrameFlags", value: function(b2, a) {
            return { message: { tag_alter_preservation: b2.isBitSetAt(a, 6), file_alter_preservation: b2.isBitSetAt(a, 5), read_only: b2.isBitSetAt(a, 4) }, format: { grouping_identity: b2.isBitSetAt(a + 1, 7), compression: b2.isBitSetAt(a + 1, 3), encryption: b2.isBitSetAt(a + 1, 2), unsynchronisation: b2.isBitSetAt(a + 1, 1), data_length_indicator: b2.isBitSetAt(a + 1, 0) } };
          } }, { key: "_getFrameDescription", value: function(b2) {
            return b2 in h ? h[b2] : "Unknown";
          } }, { key: "getUnsyncFileReader", value: function(f, a, c) {
            f = f.getBytesAt(a, c);
            for (a = 0; a < f.length - 1; a++) 255 === f[a] && 0 === f[a + 1] && f.splice(a + 1, 1);
            return new b(f);
          } }]);
          return e2;
        }();
        var l = { APIC: function(b2, f, a, c, k) {
          c = b2;
          var g = v(a.getByteAt(b2));
          switch (k && k.major) {
            case 2:
              k = a.getStringAt(
                b2 + 1,
                3
              );
              b2 += 4;
              break;
            case 3:
            case 4:
              k = a.getStringWithCharsetAt(b2 + 1, f - 1);
              b2 += 1 + k.bytesReadCount;
              break;
            default:
              throw Error("Couldn't read ID3v2 major version.");
          }
          var e2 = a.getByteAt(b2);
          e2 = t[e2];
          g = a.getStringWithCharsetAt(b2 + 1, f - (b2 - c) - 1, g);
          b2 += 1 + g.bytesReadCount;
          return { format: k.toString(), type: e2, description: g.toString(), data: a.getBytesAt(b2, c + f - b2) };
        }, CHAP: function(b2, f, a, c, k) {
          c = b2;
          var g = {}, h2 = e.readNullTerminatedString(a.getBytesAt(b2, f));
          g.id = h2.toString();
          b2 += h2.bytesReadCount;
          g.startTime = a.getLongAt(b2, true);
          b2 += 4;
          g.endTime = a.getLongAt(b2, true);
          b2 += 4;
          g.startOffset = a.getLongAt(b2, true);
          b2 += 4;
          g.endOffset = a.getLongAt(b2, true);
          b2 += 4;
          g.subFrames = this.readFrames(b2, b2 + (f - (b2 - c)), a, k);
          return g;
        }, CTOC: function(b2, f, a, c, k) {
          c = b2;
          var g = { childElementIds: [], id: void 0, topLevel: void 0, ordered: void 0, entryCount: void 0, subFrames: void 0 }, h2 = e.readNullTerminatedString(a.getBytesAt(b2, f));
          g.id = h2.toString();
          b2 += h2.bytesReadCount;
          g.topLevel = a.isBitSetAt(b2, 1);
          g.ordered = a.isBitSetAt(b2, 0);
          b2++;
          g.entryCount = a.getByteAt(b2);
          b2++;
          for (h2 = 0; h2 < g.entryCount; h2++) {
            var d2 = e.readNullTerminatedString(a.getBytesAt(
              b2,
              f - (b2 - c)
            ));
            g.childElementIds.push(d2.toString());
            b2 += d2.bytesReadCount;
          }
          g.subFrames = this.readFrames(b2, b2 + (f - (b2 - c)), a, k);
          return g;
        }, COMM: function(b2, f, a, c, k) {
          var g = b2, e2 = v(a.getByteAt(b2));
          c = a.getStringAt(b2 + 1, 3);
          k = a.getStringWithCharsetAt(b2 + 4, f - 4, e2);
          b2 += 4 + k.bytesReadCount;
          b2 = a.getStringWithCharsetAt(b2, g + f - b2, e2);
          return { language: c, short_description: k.toString(), text: b2.toString() };
        } };
        l.COM = l.COMM;
        l.PIC = function(b2, f, a, c, k) {
          return l.APIC(b2, f, a, c, k);
        };
        l.PCNT = function(b2, f, a, c, k) {
          return a.getLongAt(b2, false);
        };
        l.CNT = l.PCNT;
        l["T*"] = function(b2, f, a, c, k) {
          c = v(a.getByteAt(b2));
          return a.getStringWithCharsetAt(b2 + 1, f - 1, c).toString();
        };
        l.TXXX = function(b2, f, a, c, k) {
          c = v(a.getByteAt(b2));
          return p(b2, f, a, c);
        };
        l.WXXX = function(b2, f, a, c, k) {
          if (0 === f) return null;
          c = v(a.getByteAt(b2));
          return p(b2, f, a, c);
        };
        l["W*"] = function(b2, f, a, c, k) {
          return 0 === f ? null : a.getStringWithCharsetAt(b2, f, "iso-8859-1").toString();
        };
        l.TCON = function(b2, f, a, c) {
          return l["T*"].apply(this, arguments).replace(/^\(\d+\)/, "");
        };
        l.TCO = l.TCON;
        l.USLT = function(b2, f, a, c, k) {
          var g = b2, e2 = v(a.getByteAt(b2));
          c = a.getStringAt(b2 + 1, 3);
          k = a.getStringWithCharsetAt(b2 + 4, f - 4, e2);
          b2 += 4 + k.bytesReadCount;
          b2 = a.getStringWithCharsetAt(b2, g + f - b2, e2);
          return { language: c, descriptor: k.toString(), lyrics: b2.toString() };
        };
        l.ULT = l.USLT;
        l.UFID = function(b2, f, a, c, k) {
          c = e.readNullTerminatedString(a.getBytesAt(b2, f));
          b2 += c.bytesReadCount;
          b2 = a.getBytesAt(b2, f - c.bytesReadCount);
          return { ownerIdentifier: c.toString(), identifier: b2 };
        };
        var t = "Other;32x32 pixels 'file icon' (PNG only);Other file icon;Cover (front);Cover (back);Leaflet page;Media (e.g. label side of CD);Lead artist/lead performer/soloist;Artist/performer;Conductor;Band/Orchestra;Composer;Lyricist/text writer;Recording Location;During recording;During performance;Movie/video screen capture;A bright coloured fish;Illustration;Band/artist logotype;Publisher/Studio logotype".split(";");
        r.exports = d;
      }, { "./ArrayFileReader": 3, "./MediaFileReader": 11, "./StringUtils": 13 }], 9: [function(d, r, q) {
        function n(b2) {
          "@babel/helpers - typeof";
          n = "function" === typeof Symbol && "symbol" === typeof Symbol.iterator ? function(a) {
            return typeof a;
          } : function(a) {
            return a && "function" === typeof Symbol && a.constructor === Symbol && a !== Symbol.prototype ? "symbol" : typeof a;
          };
          return n(b2);
        }
        function u(b2, a) {
          for (var c = 0; c < a.length; c++) {
            var f = a[c];
            f.enumerable = f.enumerable || false;
            f.configurable = true;
            "value" in f && (f.writable = true);
            Object.defineProperty(
              b2,
              f.key,
              f
            );
          }
        }
        function v(b2, a, c) {
          a && u(b2.prototype, a);
          c && u(b2, c);
          return b2;
        }
        function p(b2, a) {
          if ("function" !== typeof a && null !== a) throw new TypeError("Super expression must either be null or a function");
          b2.prototype = Object.create(a && a.prototype, { constructor: { value: b2, writable: true, configurable: true } });
          a && e(b2, a);
        }
        function e(b2, a) {
          e = Object.setPrototypeOf || function(a2, b3) {
            a2.__proto__ = b3;
            return a2;
          };
          return e(b2, a);
        }
        function b(b2) {
          var a = h();
          return function() {
            var c = l(b2);
            if (a) {
              var f = l(this).constructor;
              c = Reflect.construct(
                c,
                arguments,
                f
              );
            } else c = c.apply(this, arguments);
            if (!c || "object" !== n(c) && "function" !== typeof c) {
              if (void 0 === this) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              c = this;
            }
            return c;
          };
        }
        function h() {
          if ("undefined" === typeof Reflect || !Reflect.construct || Reflect.construct.sham) return false;
          if ("function" === typeof Proxy) return true;
          try {
            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            })), true;
          } catch (f) {
            return false;
          }
        }
        function l(b2) {
          l = Object.setPrototypeOf ? Object.getPrototypeOf : function(a) {
            return a.__proto__ || Object.getPrototypeOf(a);
          };
          return l(b2);
        }
        q = d("./MediaTagReader");
        d("./MediaFileReader");
        var t = d("./ID3v2FrameReader");
        d = function(f) {
          function a() {
            if (!(this instanceof a)) throw new TypeError("Cannot call a class as a function");
            return c.apply(this, arguments);
          }
          p(a, f);
          var c = b(a);
          v(a, [{ key: "_loadData", value: function(a2, b2) {
            a2.loadRange([6, 9], { onSuccess: function() {
              a2.loadRange([0, 10 + a2.getSynchsafeInteger32At(6) - 1], b2);
            }, onError: b2.onError });
          } }, { key: "_parseData", value: function(a2, b2) {
            var c2, g = 0, f2 = a2.getByteAt(g + 3);
            if (4 < f2) return { type: "ID3", version: ">2.4", tags: {} };
            var e2 = a2.getByteAt(g + 4), k = a2.isBitSetAt(g + 5, 7), h2 = a2.isBitSetAt(g + 5, 6), d2 = a2.isBitSetAt(g + 5, 5), l2 = a2.getSynchsafeInteger32At(g + 6);
            g += 10;
            if (h2) if (4 === f2) {
              var p2 = a2.getSynchsafeInteger32At(g);
              g += p2;
            } else p2 = a2.getLongAt(g, true), g += p2 + 4;
            p2 = { type: "ID3", version: "2." + f2 + "." + e2, major: f2, revision: e2, flags: { unsynchronisation: k, extended_header: h2, experimental_indicator: d2, footer_present: false }, size: l2, tags: {} };
            b2 && (c2 = this._expandShortcutTags(b2));
            b2 = l2 + 10;
            p2.flags.unsynchronisation && (a2 = t.getUnsyncFileReader(a2, g, l2), g = 0, b2 = a2.getSize());
            a2 = t.readFrames(g, b2, a2, p2, c2);
            for (var n2 in m) m.hasOwnProperty(n2) && (c2 = this._getFrameData(a2, m[n2])) && (p2.tags[n2] = c2);
            for (var q2 in a2) a2.hasOwnProperty(q2) && (p2.tags[q2] = a2[q2]);
            return p2;
          } }, { key: "_getFrameData", value: function(a2, b2) {
            for (var c2 = 0, g; g = b2[c2]; c2++) if (g in a2) return a2 = a2[g] instanceof Array ? a2[g][0] : a2[g], a2.data;
          } }, { key: "getShortcuts", value: function() {
            return m;
          } }], [{ key: "getTagIdentifierByteRange", value: function() {
            return { offset: 0, length: 10 };
          } }, {
            key: "canReadTagFormat",
            value: function(a2) {
              return "ID3" === String.fromCharCode.apply(String, a2.slice(0, 3));
            }
          }]);
          return a;
        }(q);
        var m = { title: ["TIT2", "TT2"], artist: ["TPE1", "TP1"], album: ["TALB", "TAL"], year: ["TYER", "TYE"], comment: ["COMM", "COM"], track: ["TRCK", "TRK"], genre: ["TCON", "TCO"], picture: ["APIC", "PIC"], lyrics: ["USLT", "ULT"] };
        r.exports = d;
      }, { "./ID3v2FrameReader": 8, "./MediaFileReader": 11, "./MediaTagReader": 12 }], 10: [function(d, r, q) {
        function n(a) {
          "@babel/helpers - typeof";
          n = "function" === typeof Symbol && "symbol" === typeof Symbol.iterator ? function(a2) {
            return typeof a2;
          } : function(a2) {
            return a2 && "function" === typeof Symbol && a2.constructor === Symbol && a2 !== Symbol.prototype ? "symbol" : typeof a2;
          };
          return n(a);
        }
        function u(a, b2) {
          for (var c = 0; c < b2.length; c++) {
            var g = b2[c];
            g.enumerable = g.enumerable || false;
            g.configurable = true;
            "value" in g && (g.writable = true);
            Object.defineProperty(a, g.key, g);
          }
        }
        function v(a, b2, f2) {
          b2 && u(a.prototype, b2);
          f2 && u(a, f2);
          return a;
        }
        function p(a, b2) {
          if ("function" !== typeof b2 && null !== b2) throw new TypeError("Super expression must either be null or a function");
          a.prototype = Object.create(b2 && b2.prototype, { constructor: { value: a, writable: true, configurable: true } });
          b2 && e(a, b2);
        }
        function e(a, b2) {
          e = Object.setPrototypeOf || function(a2, b3) {
            a2.__proto__ = b3;
            return a2;
          };
          return e(a, b2);
        }
        function b(a) {
          var b2 = h();
          return function() {
            var c = l(a);
            if (b2) {
              var g = l(this).constructor;
              c = Reflect.construct(c, arguments, g);
            } else c = c.apply(this, arguments);
            if (!c || "object" !== n(c) && "function" !== typeof c) {
              if (void 0 === this) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              c = this;
            }
            return c;
          };
        }
        function h() {
          if ("undefined" === typeof Reflect || !Reflect.construct || Reflect.construct.sham) return false;
          if ("function" === typeof Proxy) return true;
          try {
            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            })), true;
          } catch (a) {
            return false;
          }
        }
        function l(a) {
          l = Object.setPrototypeOf ? Object.getPrototypeOf : function(a2) {
            return a2.__proto__ || Object.getPrototypeOf(a2);
          };
          return l(a);
        }
        q = d("./MediaTagReader");
        d("./MediaFileReader");
        d = function(a) {
          function c() {
            if (!(this instanceof c)) throw new TypeError("Cannot call a class as a function");
            return e2.apply(this, arguments);
          }
          p(c, a);
          var e2 = b(c);
          v(c, [{ key: "_loadData", value: function(a2, b2) {
            var c2 = this;
            a2.loadRange([0, 16], { onSuccess: function() {
              c2._loadAtom(a2, 0, "", b2);
            }, onError: b2.onError });
          } }, { key: "_loadAtom", value: function(a2, b2, c2, f2) {
            if (b2 >= a2.getSize()) f2.onSuccess();
            else {
              var g = this, e3 = a2.getLongAt(b2, true);
              if (0 == e3 || isNaN(e3)) f2.onSuccess();
              else {
                var h2 = a2.getStringAt(b2 + 4, 4);
                if (this._isContainerAtom(h2)) {
                  "meta" == h2 && (b2 += 4);
                  var d2 = (c2 ? c2 + "." : "") + h2;
                  "moov.udta.meta.ilst" === d2 ? a2.loadRange([b2, b2 + e3], f2) : a2.loadRange(
                    [b2 + 8, b2 + 8 + 8],
                    { onSuccess: function() {
                      g._loadAtom(a2, b2 + 8, d2, f2);
                    }, onError: f2.onError }
                  );
                } else a2.loadRange([b2 + e3, b2 + e3 + 8], { onSuccess: function() {
                  g._loadAtom(a2, b2 + e3, c2, f2);
                }, onError: f2.onError });
              }
            }
          } }, { key: "_isContainerAtom", value: function(a2) {
            return 0 <= ["moov", "udta", "meta", "ilst"].indexOf(a2);
          } }, { key: "_canReadAtom", value: function(a2) {
            return "----" !== a2;
          } }, { key: "_parseData", value: function(a2, b2) {
            var c2 = {};
            b2 = this._expandShortcutTags(b2);
            this._readAtom(c2, a2, 0, a2.getSize(), b2);
            for (var g in f) f.hasOwnProperty(g) && (b2 = c2[f[g]]) && (c2[g] = "track" === g ? b2.data.track : b2.data);
            return { type: "MP4", ftyp: a2.getStringAt(8, 4), version: a2.getLongAt(12, true), tags: c2 };
          } }, { key: "_readAtom", value: function(a2, b2, c2, f2, e3, h2, d2) {
            d2 = void 0 === d2 ? "" : d2 + "  ";
            for (var g = c2; g < c2 + f2; ) {
              var l2 = b2.getLongAt(g, true);
              if (0 == l2) break;
              var k = b2.getStringAt(g + 4, 4);
              if (this._isContainerAtom(k)) {
                "meta" == k && (g += 4);
                this._readAtom(a2, b2, g + 8, l2 - 8, e3, (h2 ? h2 + "." : "") + k, d2);
                break;
              }
              (!e3 || 0 <= e3.indexOf(k)) && "moov.udta.meta.ilst" === h2 && this._canReadAtom(k) && (a2[k] = this._readMetadataAtom(b2, g));
              g += l2;
            }
          } }, { key: "_readMetadataAtom", value: function(a2, b2) {
            var c2 = a2.getLongAt(b2, true), g = a2.getStringAt(b2 + 4, 4), f2 = a2.getInteger24At(b2 + 16 + 1, true);
            f2 = t[f2];
            if ("trkn" == g) var e3 = { track: a2.getShortAt(b2 + 16 + 10, true), total: a2.getShortAt(b2 + 16 + 14, true) };
            else if ("disk" == g) e3 = { disk: a2.getShortAt(b2 + 16 + 10, true), total: a2.getShortAt(b2 + 16 + 14, true) };
            else {
              b2 += 24;
              var h2 = c2 - 24;
              "covr" === g && "uint8" === f2 && (f2 = "jpeg");
              switch (f2) {
                case "text":
                  e3 = a2.getStringWithCharsetAt(b2, h2, "utf-8").toString();
                  break;
                case "uint8":
                  e3 = a2.getShortAt(b2, false);
                  break;
                case "int":
                case "uint":
                  e3 = ("int" == f2 ? 1 == h2 ? a2.getSByteAt : 2 == h2 ? a2.getSShortAt : 4 == h2 ? a2.getSLongAt : a2.getLongAt : 1 == h2 ? a2.getByteAt : 2 == h2 ? a2.getShortAt : a2.getLongAt).call(a2, b2 + (8 == h2 ? 4 : 0), true);
                  break;
                case "jpeg":
                case "png":
                  e3 = { format: "image/" + f2, data: a2.getBytesAt(b2, h2) };
              }
            }
            return { id: g, size: c2, description: m[g] || "Unknown", data: e3 };
          } }, { key: "getShortcuts", value: function() {
            return f;
          } }], [{ key: "getTagIdentifierByteRange", value: function() {
            return { offset: 0, length: 16 };
          } }, { key: "canReadTagFormat", value: function(a2) {
            return "ftyp" === String.fromCharCode.apply(String, a2.slice(4, 8));
          } }]);
          return c;
        }(q);
        var t = {
          0: "uint8",
          1: "text",
          13: "jpeg",
          14: "png",
          21: "int",
          22: "uint"
        }, m = {
          "©alb": "Album",
          "©ART": "Artist",
          aART: "Album Artist",
          "©day": "Release Date",
          "©nam": "Title",
          "©gen": "Genre",
          gnre: "Genre",
          trkn: "Track Number",
          "©wrt": "Composer",
          "©too": "Encoding Tool",
          "©enc": "Encoded By",
          cprt: "Copyright",
          covr: "Cover Art",
          "©grp": "Grouping",
          keyw: "Keywords",
          "©lyr": "Lyrics",
          "©cmt": "Comment",
          tmpo: "Tempo",
          cpil: "Compilation",
          disk: "Disc Number",
          tvsh: "TV Show Name",
          tven: "TV Episode ID",
          tvsn: "TV Season",
          tves: "TV Episode",
          tvnn: "TV Network",
          desc: "Description",
          ldes: "Long Description",
          sonm: "Sort Name",
          soar: "Sort Artist",
          soaa: "Sort Album",
          soco: "Sort Composer",
          sosn: "Sort Show",
          purd: "Purchase Date",
          pcst: "Podcast",
          purl: "Podcast URL",
          catg: "Category",
          hdvd: "HD Video",
          stik: "Media Type",
          rtng: "Content Rating",
          pgap: "Gapless Playback",
          apID: "Purchase Account",
          sfID: "Country Code",
          atID: "Artist ID",
          cnID: "Catalog ID",
          plID: "Collection ID",
          geID: "Genre ID",
          "xid ": "Vendor Information",
          flvr: "Codec Flavor"
        }, f = {
          title: "©nam",
          artist: "©ART",
          album: "©alb",
          year: "©day",
          comment: "©cmt",
          track: "trkn",
          genre: "©gen",
          picture: "covr",
          lyrics: "©lyr"
        };
        r.exports = d;
      }, { "./MediaFileReader": 11, "./MediaTagReader": 12 }], 11: [function(d, r, q) {
        function n(e, b) {
          for (var h = 0; h < b.length; h++) {
            var d2 = b[h];
            d2.enumerable = d2.enumerable || false;
            d2.configurable = true;
            "value" in d2 && (d2.writable = true);
            Object.defineProperty(e, d2.key, d2);
          }
        }
        function u(e, b, h) {
          b && n(e.prototype, b);
          h && n(e, h);
          return e;
        }
        function v(e, b, h) {
          b in e ? Object.defineProperty(e, b, {
            value: h,
            enumerable: true,
            configurable: true,
            writable: true
          }) : e[b] = h;
          return e;
        }
        var p = d("./StringUtils");
        d = function() {
          function e(b) {
            if (!(this instanceof e)) throw new TypeError("Cannot call a class as a function");
            v(this, "_isInitialized", void 0);
            v(this, "_size", void 0);
            this._isInitialized = false;
            this._size = 0;
          }
          u(e, [{ key: "init", value: function(b) {
            var e2 = this;
            if (this._isInitialized) setTimeout(b.onSuccess, 1);
            else return this._init({ onSuccess: function() {
              e2._isInitialized = true;
              b.onSuccess();
            }, onError: b.onError });
          } }, { key: "_init", value: function(b) {
            throw Error("Must implement init function");
          } }, { key: "loadRange", value: function(b, e2) {
            throw Error("Must implement loadRange function");
          } }, { key: "getSize", value: function() {
            if (!this._isInitialized) throw Error("init() must be called first.");
            return this._size;
          } }, { key: "getByteAt", value: function(b) {
            throw Error("Must implement getByteAt function");
          } }, { key: "getBytesAt", value: function(b, e2) {
            for (var h = Array(e2), d2 = 0; d2 < e2; d2++) h[d2] = this.getByteAt(b + d2);
            return h;
          } }, { key: "isBitSetAt", value: function(b, e2) {
            return 0 != (this.getByteAt(b) & 1 << e2);
          } }, { key: "getSByteAt", value: function(b) {
            b = this.getByteAt(b);
            return 127 < b ? b - 256 : b;
          } }, { key: "getShortAt", value: function(b, e2) {
            b = e2 ? (this.getByteAt(b) << 8) + this.getByteAt(b + 1) : (this.getByteAt(b + 1) << 8) + this.getByteAt(b);
            0 > b && (b += 65536);
            return b;
          } }, { key: "getSShortAt", value: function(b, e2) {
            b = this.getShortAt(b, e2);
            return 32767 < b ? b - 65536 : b;
          } }, { key: "getLongAt", value: function(b, e2) {
            var d2 = this.getByteAt(b), h = this.getByteAt(b + 1), m = this.getByteAt(b + 2);
            b = this.getByteAt(b + 3);
            e2 = e2 ? (((d2 << 8) + h << 8) + m << 8) + b : (((b << 8) + m << 8) + h << 8) + d2;
            0 > e2 && (e2 += 4294967296);
            return e2;
          } }, {
            key: "getSLongAt",
            value: function(b, e2) {
              b = this.getLongAt(b, e2);
              return 2147483647 < b ? b - 4294967296 : b;
            }
          }, { key: "getInteger24At", value: function(b, e2) {
            var d2 = this.getByteAt(b), h = this.getByteAt(b + 1);
            b = this.getByteAt(b + 2);
            e2 = e2 ? ((d2 << 8) + h << 8) + b : ((b << 8) + h << 8) + d2;
            0 > e2 && (e2 += 16777216);
            return e2;
          } }, { key: "getStringAt", value: function(b, e2) {
            for (var d2 = [], h = b, m = 0; h < b + e2; h++, m++) d2[m] = String.fromCharCode(this.getByteAt(h));
            return d2.join("");
          } }, { key: "getStringWithCharsetAt", value: function(b, e2, d2) {
            b = this.getBytesAt(b, e2);
            switch ((d2 || "").toLowerCase()) {
              case "utf-16":
              case "utf-16le":
              case "utf-16be":
                d2 = p.readUTF16String(b, "utf-16be" === d2);
                break;
              case "utf-8":
                d2 = p.readUTF8String(b);
                break;
              default:
                d2 = p.readNullTerminatedString(b);
            }
            return d2;
          } }, { key: "getCharAt", value: function(b) {
            return String.fromCharCode(this.getByteAt(b));
          } }, { key: "getSynchsafeInteger32At", value: function(b) {
            var e2 = this.getByteAt(b), d2 = this.getByteAt(b + 1), p2 = this.getByteAt(b + 2);
            return this.getByteAt(b + 3) & 127 | (p2 & 127) << 7 | (d2 & 127) << 14 | (e2 & 127) << 21;
          } }], [{ key: "canReadFile", value: function(b) {
            throw Error("Must implement canReadFile function");
          } }]);
          return e;
        }();
        r.exports = d;
      }, { "./StringUtils": 13 }], 12: [function(d, r, q) {
        function n(d2, e) {
          for (var b = 0; b < e.length; b++) {
            var h = e[b];
            h.enumerable = h.enumerable || false;
            h.configurable = true;
            "value" in h && (h.writable = true);
            Object.defineProperty(d2, h.key, h);
          }
        }
        function u(d2, e, b) {
          e && n(d2.prototype, e);
          b && n(d2, b);
          return d2;
        }
        function v(d2, e, b) {
          e in d2 ? Object.defineProperty(d2, e, { value: b, enumerable: true, configurable: true, writable: true }) : d2[e] = b;
          return d2;
        }
        d("./MediaFileReader");
        d = function() {
          function d2(e) {
            if (!(this instanceof d2)) throw new TypeError("Cannot call a class as a function");
            v(this, "_mediaFileReader", void 0);
            v(this, "_tags", void 0);
            this._mediaFileReader = e;
            this._tags = null;
          }
          u(d2, [{ key: "setTagsToRead", value: function(e) {
            this._tags = e;
            return this;
          } }, { key: "read", value: function(e) {
            var b = this;
            this._mediaFileReader.init({ onSuccess: function() {
              b._loadData(b._mediaFileReader, { onSuccess: function() {
                try {
                  var d3 = b._parseData(b._mediaFileReader, b._tags);
                } catch (l) {
                  if (e.onError) {
                    e.onError({ type: "parseData", info: l.message });
                    return;
                  }
                }
                e.onSuccess(d3);
              }, onError: e.onError });
            }, onError: e.onError });
          } }, {
            key: "getShortcuts",
            value: function() {
              return {};
            }
          }, { key: "_loadData", value: function(e, b) {
            throw Error("Must implement _loadData function");
          } }, { key: "_parseData", value: function(e, b) {
            throw Error("Must implement _parseData function");
          } }, { key: "_expandShortcutTags", value: function(e) {
            if (!e) return null;
            for (var b = [], d3 = this.getShortcuts(), l = 0, n2; n2 = e[l]; l++) b = b.concat(d3[n2] || [n2]);
            return b;
          } }], [{ key: "getTagIdentifierByteRange", value: function() {
            throw Error("Must implement");
          } }, { key: "canReadTagFormat", value: function(e) {
            throw Error("Must implement");
          } }]);
          return d2;
        }();
        r.exports = d;
      }, { "./MediaFileReader": 11 }], 13: [function(d, r, q) {
        function n(e, b) {
          for (var d2 = 0; d2 < b.length; d2++) {
            var l = b[d2];
            l.enumerable = l.enumerable || false;
            l.configurable = true;
            "value" in l && (l.writable = true);
            Object.defineProperty(e, l.key, l);
          }
        }
        function u(e, b, d2) {
          b && n(e.prototype, b);
          d2 && n(e, d2);
          return e;
        }
        function v(e, b, d2) {
          b in e ? Object.defineProperty(e, b, { value: d2, enumerable: true, configurable: true, writable: true }) : e[b] = d2;
          return e;
        }
        var p = function() {
          function e(b, d2) {
            if (!(this instanceof e)) throw new TypeError("Cannot call a class as a function");
            v(this, "_value", void 0);
            v(this, "bytesReadCount", void 0);
            v(this, "length", void 0);
            this._value = b;
            this.bytesReadCount = d2;
            this.length = b.length;
          }
          u(e, [{ key: "toString", value: function() {
            return this._value;
          } }]);
          return e;
        }();
        r.exports = { readUTF16String: function(e, b, d2) {
          var h = 0, n2 = 1, m = 0;
          d2 = Math.min(d2 || e.length, e.length);
          254 == e[0] && 255 == e[1] ? (b = true, h = 2) : 255 == e[0] && 254 == e[1] && (b = false, h = 2);
          b && (n2 = 0, m = 1);
          b = [];
          for (var f = 0; h < d2; f++) {
            var a = e[h + n2], c = (a << 8) + e[h + m];
            h += 2;
            if (0 == c) break;
            else 216 > a || 224 <= a ? b[f] = String.fromCharCode(c) : (a = (e[h + n2] << 8) + e[h + m], h += 2, b[f] = String.fromCharCode(c, a));
          }
          return new p(b.join(""), h);
        }, readUTF8String: function(e, b) {
          var d2 = 0;
          b = Math.min(b || e.length, e.length);
          239 == e[0] && 187 == e[1] && 191 == e[2] && (d2 = 3);
          for (var l = [], n2 = 0; d2 < b; n2++) {
            var m = e[d2++];
            if (0 == m) break;
            else if (128 > m) l[n2] = String.fromCharCode(m);
            else if (194 <= m && 224 > m) {
              var f = e[d2++];
              l[n2] = String.fromCharCode(((m & 31) << 6) + (f & 63));
            } else if (224 <= m && 240 > m) {
              f = e[d2++];
              var a = e[d2++];
              l[n2] = String.fromCharCode(((m & 255) << 12) + ((f & 63) << 6) + (a & 63));
            } else if (240 <= m && 245 > m) {
              f = e[d2++];
              a = e[d2++];
              var c = e[d2++];
              a = ((m & 7) << 18) + ((f & 63) << 12) + ((a & 63) << 6) + (c & 63) - 65536;
              l[n2] = String.fromCharCode((a >> 10) + 55296, (a & 1023) + 56320);
            }
          }
          return new p(l.join(""), d2);
        }, readNullTerminatedString: function(e, b) {
          var d2 = [];
          b = b || e.length;
          for (var l = 0; l < b; ) {
            var n2 = e[l++];
            if (0 == n2) break;
            d2[l - 1] = String.fromCharCode(n2);
          }
          return new p(d2.join(""), l);
        } };
      }, {}], 14: [function(d, r, q) {
        function n(a) {
          "@babel/helpers - typeof";
          n = "function" === typeof Symbol && "symbol" === typeof Symbol.iterator ? function(a2) {
            return typeof a2;
          } : function(a2) {
            return a2 && "function" === typeof Symbol && a2.constructor === Symbol && a2 !== Symbol.prototype ? "symbol" : typeof a2;
          };
          return n(a);
        }
        function u(a, b2) {
          for (var c = 0; c < b2.length; c++) {
            var d2 = b2[c];
            d2.enumerable = d2.enumerable || false;
            d2.configurable = true;
            "value" in d2 && (d2.writable = true);
            Object.defineProperty(a, d2.key, d2);
          }
        }
        function v(a, b2, d2) {
          b2 && u(a.prototype, b2);
          d2 && u(a, d2);
          return a;
        }
        function p(a, b2) {
          if ("function" !== typeof b2 && null !== b2) throw new TypeError("Super expression must either be null or a function");
          a.prototype = Object.create(b2 && b2.prototype, { constructor: {
            value: a,
            writable: true,
            configurable: true
          } });
          b2 && e(a, b2);
        }
        function e(a, b2) {
          e = Object.setPrototypeOf || function(a2, b3) {
            a2.__proto__ = b3;
            return a2;
          };
          return e(a, b2);
        }
        function b(a) {
          var b2 = l();
          return function() {
            var c = t(a);
            if (b2) {
              var d2 = t(this).constructor;
              c = Reflect.construct(c, arguments, d2);
            } else c = c.apply(this, arguments);
            c = !c || "object" !== n(c) && "function" !== typeof c ? h(this) : c;
            return c;
          };
        }
        function h(a) {
          if (void 0 === a) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          return a;
        }
        function l() {
          if ("undefined" === typeof Reflect || !Reflect.construct || Reflect.construct.sham) return false;
          if ("function" === typeof Proxy) return true;
          try {
            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            })), true;
          } catch (a) {
            return false;
          }
        }
        function t(a) {
          t = Object.setPrototypeOf ? Object.getPrototypeOf : function(a2) {
            return a2.__proto__ || Object.getPrototypeOf(a2);
          };
          return t(a);
        }
        function m(a, b2, d2) {
          b2 in a ? Object.defineProperty(a, b2, { value: d2, enumerable: true, configurable: true, writable: true }) : a[b2] = d2;
          return a;
        }
        var f = d("./ChunkedFileData");
        q = function(a) {
          function c(a2) {
            if (!(this instanceof c)) throw new TypeError("Cannot call a class as a function");
            var b2 = e2.call(this);
            m(h(b2), "_url", void 0);
            m(h(b2), "_fileData", void 0);
            b2._url = a2;
            b2._fileData = new f();
            return b2;
          }
          p(c, a);
          var e2 = b(c);
          v(c, [{ key: "_init", value: function(a2) {
            c._config.avoidHeadRequests ? this._fetchSizeWithGetRequest(a2) : this._fetchSizeWithHeadRequest(a2);
          } }, { key: "_fetchSizeWithHeadRequest", value: function(a2) {
            var b2 = this;
            this._makeXHRRequest("HEAD", null, {
              onSuccess: function(c2) {
                (c2 = b2._parseContentLength(c2)) ? (b2._size = c2, a2.onSuccess()) : b2._fetchSizeWithGetRequest(a2);
              },
              onError: a2.onError
            });
          } }, { key: "_fetchSizeWithGetRequest", value: function(a2) {
            var b2 = this, c2 = this._roundRangeToChunkMultiple([0, 0]);
            this._makeXHRRequest("GET", c2, { onSuccess: function(c3) {
              var d2 = b2._parseContentRange(c3);
              c3 = b2._getXhrResponseContent(c3);
              if (d2) {
                if (null == d2.instanceLength) {
                  b2._fetchEntireFile(a2);
                  return;
                }
                b2._size = d2.instanceLength;
              } else b2._size = c3.length;
              b2._fileData.addData(0, c3);
              a2.onSuccess();
            }, onError: a2.onError });
          } }, { key: "_fetchEntireFile", value: function(a2) {
            var b2 = this;
            this._makeXHRRequest("GET", null, { onSuccess: function(c2) {
              c2 = b2._getXhrResponseContent(c2);
              b2._size = c2.length;
              b2._fileData.addData(0, c2);
              a2.onSuccess();
            }, onError: a2.onError });
          } }, { key: "_getXhrResponseContent", value: function(a2) {
            return a2.responseBody || a2.responseText || "";
          } }, { key: "_parseContentLength", value: function(a2) {
            a2 = this._getResponseHeader(a2, "Content-Length");
            return null == a2 ? a2 : parseInt(a2, 10);
          } }, { key: "_parseContentRange", value: function(a2) {
            if (a2 = this._getResponseHeader(a2, "Content-Range")) {
              var b2 = a2.match(/bytes (\d+)-(\d+)\/(?:(\d+)|\*)/i);
              if (!b2) throw Error("FIXME: Unknown Content-Range syntax: " + a2);
              return { firstBytePosition: parseInt(b2[1], 10), lastBytePosition: parseInt(b2[2], 10), instanceLength: b2[3] ? parseInt(b2[3], 10) : null };
            }
            return null;
          } }, { key: "loadRange", value: function(a2, b2) {
            var c2 = this;
            c2._fileData.hasDataRange(a2[0], Math.min(c2._size, a2[1])) ? setTimeout(b2.onSuccess, 1) : (a2 = this._roundRangeToChunkMultiple(a2), a2[1] = Math.min(c2._size, a2[1]), this._makeXHRRequest("GET", a2, { onSuccess: function(d2) {
              d2 = c2._getXhrResponseContent(d2);
              c2._fileData.addData(a2[0], d2);
              b2.onSuccess();
            }, onError: b2.onError }));
          } }, {
            key: "_roundRangeToChunkMultiple",
            value: function(a2) {
              return [a2[0], a2[0] + 1024 * Math.ceil((a2[1] - a2[0] + 1) / 1024) - 1];
            }
          }, { key: "_makeXHRRequest", value: function(a2, b2, d2) {
            var e3 = this._createXHRObject();
            e3.open(a2, this._url);
            var f2 = function() {
              if (200 === e3.status || 206 === e3.status) d2.onSuccess(e3);
              else if (d2.onError) d2.onError({ type: "xhr", info: "Unexpected HTTP status " + e3.status + ".", xhr: e3 });
              e3 = null;
            };
            "undefined" !== typeof e3.onload ? (e3.onload = f2, e3.onerror = function() {
              if (d2.onError) d2.onError({ type: "xhr", info: "Generic XHR error, check xhr object.", xhr: e3 });
            }) : e3.onreadystatechange = function() {
              4 === e3.readyState && f2();
            };
            c._config.timeoutInSec && (e3.timeout = 1e3 * c._config.timeoutInSec, e3.ontimeout = function() {
              if (d2.onError) d2.onError({ type: "xhr", info: "Timeout after " + e3.timeout / 1e3 + "s. Use jsmediatags.Config.setXhrTimeout to override.", xhr: e3 });
            });
            e3.overrideMimeType("text/plain; charset=x-user-defined");
            b2 && this._setRequestHeader(e3, "Range", "bytes=" + b2[0] + "-" + b2[1]);
            this._setRequestHeader(e3, "If-Modified-Since", "Sat, 01 Jan 1970 00:00:00 GMT");
            e3.send(null);
          } }, { key: "_setRequestHeader", value: function(a2, b2, d2) {
            0 > c._config.disallowedXhrHeaders.indexOf(b2.toLowerCase()) && a2.setRequestHeader(b2, d2);
          } }, { key: "_hasResponseHeader", value: function(a2, b2) {
            a2 = a2.getAllResponseHeaders();
            if (!a2) return false;
            a2 = a2.split("\r\n");
            for (var c2 = [], d2 = 0; d2 < a2.length; d2++) c2[d2] = a2[d2].split(":")[0].toLowerCase();
            return 0 <= c2.indexOf(b2.toLowerCase());
          } }, { key: "_getResponseHeader", value: function(a2, b2) {
            return this._hasResponseHeader(a2, b2) ? a2.getResponseHeader(b2) : null;
          } }, { key: "getByteAt", value: function(a2) {
            return this._fileData.getByteAt(a2).charCodeAt(0) & 255;
          } }, { key: "_isWebWorker", value: function() {
            return "undefined" !== typeof WorkerGlobalScope && self instanceof WorkerGlobalScope;
          } }, { key: "_createXHRObject", value: function() {
            if ("undefined" === typeof window && !this._isWebWorker()) return new (d("xhr2")).XMLHttpRequest();
            if ("undefined" !== typeof XMLHttpRequest) return new XMLHttpRequest();
            throw Error("XMLHttpRequest is not supported");
          } }], [{ key: "canReadFile", value: function(a2) {
            return "string" === typeof a2 && /^[a-z]+:\/\//i.test(a2);
          } }, { key: "setConfig", value: function(a2) {
            for (var b2 in a2) a2.hasOwnProperty(b2) && (this._config[b2] = a2[b2]);
            a2 = this._config.disallowedXhrHeaders;
            for (b2 = 0; b2 < a2.length; b2++) a2[b2] = a2[b2].toLowerCase();
          } }]);
          return c;
        }(d("./MediaFileReader"));
        m(q, "_config", void 0);
        q._config = { avoidHeadRequests: false, disallowedXhrHeaders: [], timeoutInSec: 30 };
        r.exports = q;
      }, { "./ChunkedFileData": 5, "./MediaFileReader": 11, xhr2: 2 }], 15: [function(d, r, q) {
        function n(a2, b2) {
          if (!(a2 instanceof b2)) throw new TypeError("Cannot call a class as a function");
        }
        function u(a2, b2) {
          for (var c2 = 0; c2 < b2.length; c2++) {
            var d2 = b2[c2];
            d2.enumerable = d2.enumerable || false;
            d2.configurable = true;
            "value" in d2 && (d2.writable = true);
            Object.defineProperty(a2, d2.key, d2);
          }
        }
        function v(a2, b2, c2) {
          b2 && u(a2.prototype, b2);
          c2 && u(a2, c2);
          return a2;
        }
        function p(a2, b2, c2) {
          b2 in a2 ? Object.defineProperty(a2, b2, { value: c2, enumerable: true, configurable: true, writable: true }) : a2[b2] = c2;
          return a2;
        }
        function e(a2, b2) {
          var c2 = 0 > a2.offset && (-a2.offset > b2 || 0 < a2.offset + a2.length);
          return !(0 <= a2.offset && a2.offset + a2.length >= b2 || c2);
        }
        d("./MediaFileReader");
        var b = d("./XhrFileReader"), h = d("./BlobFileReader"), l = d("./ArrayFileReader");
        d("./MediaTagReader");
        var t = d("./ID3v1TagReader"), m = d("./ID3v2TagReader"), f = d("./MP4TagReader"), a = d("./FLACTagReader"), c = [], k = [], g = function() {
          function a2(b2) {
            n(this, a2);
            p(this, "_file", void 0);
            p(this, "_tagsToRead", void 0);
            p(this, "_fileReader", void 0);
            p(this, "_tagReader", void 0);
            this._file = b2;
          }
          v(a2, [{ key: "setTagsToRead", value: function(a3) {
            this._tagsToRead = a3;
            return this;
          } }, { key: "setFileReader", value: function(a3) {
            this._fileReader = a3;
            return this;
          } }, { key: "setTagReader", value: function(a3) {
            this._tagReader = a3;
            return this;
          } }, { key: "read", value: function(a3) {
            var b2 = new (this._getFileReader())(this._file), c2 = this;
            b2.init({ onSuccess: function() {
              c2._getTagReader(b2, { onSuccess: function(d2) {
                new d2(b2).setTagsToRead(c2._tagsToRead).read(a3);
              }, onError: a3.onError });
            }, onError: a3.onError });
          } }, { key: "_getFileReader", value: function() {
            return this._fileReader ? this._fileReader : this._findFileReader();
          } }, { key: "_findFileReader", value: function() {
            for (var a3 = 0; a3 < c.length; a3++) if (c[a3].canReadFile(this._file)) return c[a3];
            throw Error("No suitable file reader found for " + this._file);
          } }, {
            key: "_getTagReader",
            value: function(a3, b2) {
              if (this._tagReader) {
                var c2 = this._tagReader;
                setTimeout(function() {
                  b2.onSuccess(c2);
                }, 1);
              } else this._findTagReader(a3, b2);
            }
          }, { key: "_findTagReader", value: function(a3, b2) {
            for (var c2 = [], d2 = [], f2 = a3.getSize(), g2 = 0; g2 < k.length; g2++) {
              var h2 = k[g2].getTagIdentifierByteRange();
              e(h2, f2) && (0 <= h2.offset && h2.offset < f2 / 2 || 0 > h2.offset && h2.offset < -f2 / 2 ? c2.push(k[g2]) : d2.push(k[g2]));
            }
            var l2 = false;
            g2 = { onSuccess: function() {
              if (l2) {
                for (var c3 = 0; c3 < k.length; c3++) {
                  var d3 = k[c3].getTagIdentifierByteRange();
                  if (e(d3, f2)) {
                    try {
                      var g3 = a3.getBytesAt(0 <= d3.offset ? d3.offset : d3.offset + f2, d3.length);
                    } catch (z) {
                      if (b2.onError) b2.onError({ type: "fileReader", info: z.message });
                      return;
                    }
                    if (k[c3].canReadTagFormat(g3)) {
                      b2.onSuccess(k[c3]);
                      return;
                    }
                  }
                }
                if (b2.onError) b2.onError({ type: "tagFormat", info: "No suitable tag reader found" });
              } else l2 = true;
            }, onError: b2.onError };
            this._loadTagIdentifierRanges(a3, c2, g2);
            this._loadTagIdentifierRanges(a3, d2, g2);
          } }, { key: "_loadTagIdentifierRanges", value: function(a3, b2, c2) {
            if (0 === b2.length) setTimeout(c2.onSuccess, 1);
            else {
              for (var d2 = [Number.MAX_VALUE, 0], e2 = a3.getSize(), f2 = 0; f2 < b2.length; f2++) {
                var g2 = b2[f2].getTagIdentifierByteRange(), h2 = 0 <= g2.offset ? g2.offset : g2.offset + e2;
                g2 = h2 + g2.length - 1;
                d2[0] = Math.min(h2, d2[0]);
                d2[1] = Math.max(g2, d2[1]);
              }
              a3.loadRange(d2, c2);
            }
          } }]);
          return a2;
        }();
        q = function() {
          function a2() {
            n(this, a2);
          }
          v(a2, null, [
            { key: "addFileReader", value: function(b2) {
              c.push(b2);
              return a2;
            } },
            { key: "addTagReader", value: function(b2) {
              k.push(b2);
              return a2;
            } },
            { key: "removeTagReader", value: function(b2) {
              b2 = k.indexOf(b2);
              0 <= b2 && k.splice(b2, 1);
              return a2;
            } },
            { key: "EXPERIMENTAL_avoidHeadRequests", value: function() {
              b.setConfig({ avoidHeadRequests: true });
            } },
            { key: "setDisallowedXhrHeaders", value: function(a3) {
              b.setConfig({ disallowedXhrHeaders: a3 });
            } },
            { key: "setXhrTimeoutInSec", value: function(a3) {
              b.setConfig({ timeoutInSec: a3 });
            } }
          ]);
          return a2;
        }();
        q.addFileReader(b).addFileReader(h).addFileReader(l).addTagReader(m).addTagReader(t).addTagReader(f).addTagReader(a);
        "undefined" === typeof process || process.browser || (d = "undefined" !== typeof navigator && "ReactNative" === navigator.product ? d("./ReactNativeFileReader") : d("./NodeFileReader"), q.addFileReader(d));
        r.exports = { read: function(a2, b2) {
          new g(a2).read(b2);
        }, Reader: g, Config: q };
      }, { "./ArrayFileReader": 3, "./BlobFileReader": 4, "./FLACTagReader": 6, "./ID3v1TagReader": 7, "./ID3v2TagReader": 9, "./MP4TagReader": 10, "./MediaFileReader": 11, "./MediaTagReader": 12, "./NodeFileReader": 1, "./ReactNativeFileReader": 1, "./XhrFileReader": 14 }] }, {}, [15])(15);
    });
  }
});
export default require_jsmediatags_min();
//# sourceMappingURL=jsmediatags_dist_jsmediatags__min__js.js.map
